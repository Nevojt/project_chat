name: Deploy API

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set Environment Variables
      run: |
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> $GITHUB_ENV
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> $GITHUB_ENV
          echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> $GITHUB_ENV
          echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> $GITHUB_ENV
          echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> $GITHUB_ENV
          echo "MAIL_FROM_NAME=${{ secrets.MAIL_FROM_NAME }}" >> $GITHUB_ENV
          echo "DATABASE_HOSTNAME=${{ secrets.DATABASE_HOSTNAME }}" >> $GITHUB_ENV
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> $GITHUB_ENV
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> $GITHUB_ENV
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> $GITHUB_ENV
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> $GITHUB_ENV
          echo "BACKBLAZE_ID=${{ secrets.BACKBLAZE_ID }}" >> $GITHUB_ENV
          echo "BACKBLAZE_KEY=${{ secrets.BACKBLAZE_KEY }}" >> $GITHUB_ENV
          echo "URL_ADDRESS_DNS=${{ secrets.URL_ADDRESS_DNS }}" >> $GITHUB_ENV
          echo "KEY_CRYPTO=${{ secrets.KEY_CRYPTO }}" >> $GITHUB_ENV
          echo "ROUT_IMAGE=${{ secrets.ROUT_IMAGE }}" >> $GITHUB_ENV
          echo "BUCKET_NAME_USER_AVATAR=${{ secrets.BUCKET_NAME_USER_AVATAR }}" >> $GITHUB_ENV
          echo "BUCKET_NAME_ROOM_IMAGE=${{ secrets.BUCKET_NAME_ROOM_IMAGE }}" >> $GITHUB_ENV

    - name: Run Tests
      run: |
        pytest

    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: Deploy to Server
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
      run: |
        sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "

    